<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NeedPoint" xml:space="preserve">
    <value>&lt;p align='center'&gt;&lt;br/&gt;&lt;br/&gt;对不起，阅读{$ItemName}需要消耗 &lt;b&gt;&lt;font color=red&gt;{$NeedPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}！而你目前只有 &lt;b&gt;&lt;font color=blue&gt;{$NowPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}可用。{$PointName}数不足，无法阅读本文。请与我们联系进行充值。&lt;/p&gt;</value>
  </data>
  <data name="NoCheck" xml:space="preserve">
    <value>&lt;li&gt;对不起，您尚未通过管理员审核，不能查看收费项目。&lt;/li&gt;</value>
  </data>
  <data name="NoLogin" xml:space="preserve">
    <value>&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;你还没注册？或者没有登录？这篇{$ItemName}要求至少是本站的注册会员才能阅读！&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果你还没注册，请赶紧&lt;a href='{$InstallDir}User/Register.aspx'&gt;&lt;font color=red&gt;点此注册&lt;/font&gt;&lt;/a&gt;吧！&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果你已经注册但还没登录，请赶紧&lt;a href='{$InstallDir}User/Login.aspx?ReturnUrl={$ReturnUrl}'&gt;&lt;font color=red&gt;点此登录&lt;/font&gt;&lt;/a&gt;吧！&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="NoMail" xml:space="preserve">
    <value>&lt;li&gt;对不起，您尚未通过邮件验证，不能查看此项目。&lt;/li&gt;</value>
  </data>
  <data name="OutTime" xml:space="preserve">
    <value>&lt;p align='center'&gt;&lt;br/&gt;&lt;br/&gt;&lt;font color=red&gt;对不起，{$ItemName}为收费内容，而您的有效期已经过期，所以无法阅读本文。请与我们联系进行充值。&lt;/font&gt;&lt;/p&gt;</value>
  </data>
  <data name="Overflow_Today" xml:space="preserve">
    <value>&lt;li&gt;你已经达到或超过今天所能查看的信息总数！&lt;/li&gt;</value>
  </data>
  <data name="Overflow_Total" xml:space="preserve">
    <value>&lt;li&gt;你已经达到或超过有效期内所能查看的信息总数！&lt;/li&gt;</value>
  </data>
  <data name="PurviewCheckedErr" xml:space="preserve">
    <value>&lt;li&gt;对不起，您没有查看此栏目内容的权限！&lt;/li&gt;</value>
  </data>
  <data name="PurviewCheckedErr2" xml:space="preserve">
    <value>&lt;li&gt;对不起，您没有查看此信息的权限！&lt;/li&gt;</value>
  </data>
  <data name="UsePoint" xml:space="preserve">
    <value>&lt;p align='center'&gt;&lt;br/&gt;&lt;br/&gt;阅读{$ItemName}需要消耗 &lt;b&gt;&lt;font color=red&gt;{$InfoPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}！你目前尚有 &lt;b&gt;&lt;font color=blue&gt;{$NowPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}可用。阅读本文后，你将剩下 &lt;b&gt;&lt;font color=green&gt;{$FinalPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}&lt;br/&gt;&lt;br/&gt;你确实愿意花费 &lt;b&gt;&lt;font color=red&gt;{$InfoPoint}&lt;/font&gt;&lt;/b&gt; {$PointUnit}{$PointName}来阅读本文吗？&lt;br/&gt;&lt;br/&gt;&lt;a href='{$url}'&gt;我愿意&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href='{$InstallDir}index.aspx'&gt;我不愿意&lt;/a&gt;&lt;/p&gt;</value>
  </data>
</root>